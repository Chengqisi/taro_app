{"version":3,"file":"pages/index/index.js","sources":["webpack:///._src_pages_index_index.tsx","webpack:///._node_modules_taro-ui_dist_style_components_nav-bar.scss","webpack:///._src_components_homeCard_index.less","webpack:///._src_components_homeCard_index.tsx","webpack:///._src_pages_index_index.less","webpack:///./src/pages/index/index.tsx?aff8"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { View, Text, Button, Image, ScrollView } from \"@tarojs/components\";\nimport { useEnv, useNavigationBar, useModal, useToast, } from \"taro-hooks\"\nimport Taro from '@tarojs/taro'\nimport HomeCard from \"../../components/homeCard/index\";\nimport \"taro-ui/dist/style/components/nav-bar.scss\";\nimport \"taro-ui/dist/style/components/icon.scss\";\nimport './index.less'\nimport { AtNavBar } from \"taro-ui\";\nconst Index = () => {\n  const [cardList, setCard] = useState([{ navigateUrl: '/other_page/javascript/index', cardTitle: 'JavaScript', imgUrl: 'https://img2.baidu.com/it/u=4158766407,612112290&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500', introduce: \"是一种具有函数优先的轻量级，解释型或即时编译型的编程语言\" },\n  { navigateUrl: 'TypeScript', cardTitle: 'TypeScript', imgUrl: 'https://img0.baidu.com/it/u=4167016203,3166254551&fm=253&fmt=auto&app=138&f=JPEG?w=499&h=311', introduce: \"TypeScript是微软开发的一个开源的编程语言，通过在JavaScript的基础上添加静态类型定义构建而成\" },\n  { navigateUrl: 'Vue', cardTitle: 'Vue', imgUrl: 'https://img1.baidu.com/it/u=3137752502,1535259864&fm=253&fmt=auto&app=138&f=PNG?w=500&h=288', introduce: \"vue是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用\" },\n  { navigateUrl: 'React', cardTitle: 'React', imgUrl: 'https://img1.baidu.com/it/u=3545225878,2086373205&fm=253&fmt=auto&app=138&f=JPEG?w=450&h=236', introduce: \"用于构建用户界面的 JavaScript库\" }])\n  return (\n    <>\n    <AtNavBar\n  color='#000'\n  title='NavBar 导航栏示例'\n  leftText='返回'\n  rightFirstIconType='bullet-list'\n  rightSecondIconType='user'\n/>\n      <ScrollView scrollY>\n        {(cardList.map((item, index) => {\n          return <>\n            <HomeCard navigateUrl={item.navigateUrl} cardTitle={item.cardTitle} imgUrl={item.imgUrl} introduce={item.introduce} />\n          </>\n        }))}\n        <View className=\"foots\">--学习使用，仅供参考--</View>\n      </ScrollView>\n    </>\n  );\n};\n\nexport default Index;\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React, { useCallback } from \"react\";\nimport { View, Text, Button, Image } from \"@tarojs/components\";\nimport { useEnv, useNavigationBar, useModal, useToast, } from \"taro-hooks\"\nimport Taro from '@tarojs/taro'\nimport logo from \"./hook.png\";\nimport './index.less'\nimport Tabars from \"../../components/tabar/index\";\ninterface propsConfig {\n    cardTitle?: string,\n    imgUrl?: any,\n    navigateUrl: string,\n    introduce: string\n}\nconst HomeCard = (props: propsConfig): JSX.Element => {\n    const toPages = () => {\n        Taro.navigateTo({\n            url: props.navigateUrl\n        })\n    }\n    return (\n        <>\n            <View className=\"homeCard\" onClick={toPages}>\n                <View className=\"nav\">\n                    <Image className=\"img\" src={props.imgUrl}></Image>\n                </View>\n                <View className=\"title\">{props.cardTitle}</View>\n                <View className=\"box\">{props.introduce}</View>\n            </View>\n        </>\n    );\n};\n\nexport default HomeCard;\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"前端小知识\",\"enableShareAppMessage\":true};\n\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AANA;AARA;AANA;AACA;AAyBA;;;;;;;;;;;ACnCA;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;;;;;AAQA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AADA;AAUA;AACA;AACA;;;;;;;;;;;AChCA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}